dataset=read.delim("Restaurant_Reviews.tsv",quote = '',stringsAsFactors = FALSE)
dataset=read.delim('Restaurant_Reviews.tsv',quote = '',stringsAsFactors = FALSE)
###import the data
library(readr)
dataset=read_tsv("train.tsv")
install.packages("tm")
###cleaning the texts
library(tm)
###cleaning the texts
library(tm)
install.packages("SnowballC")
library(SnowballC)
Corpus=VCorpus(VectorSource(dataset))
View(Corpus)
Corpus=tm_map(Corpus,content_transformer(tolower))
Corpus=tm_map(Corpus,removeNumbers)
Corpus=tm_map(Corpus,removePunctuation)
Corpus=tm_map(Corpus,removeWords,stopwords)
Corpus=tm_map(Corpus,removeWords,stopwords())
Corpus=VCorpus(VectorSource(dataset))
Corpus=tm_map(Corpus,content_transformer(tolower))
Corpus=tm_map(Corpus,removeNumbers)
Corpus=tm_map(Corpus,removePunctuation)
Corpus=tm_map(Corpus,removeWords,stopwords())
View(Corpus)
View(dataset)
library(dplyr)
dataset<-dataset %>%
select[2,3]
dataset<-dataset %>%
rename(dasatset$`Says the Annies List political group supports third-trimester abortions on demand.`=comments)
dataset<-dataset %>%
rename(dasatset$`Says the Annies List political group supports third-trimester abortions on demand.`=comments)
dataset<-dataset %>%
rename(`Says the Annies List political group supports third-trimester abortions on demand.`=comments)
dataset<-as.data.frame(dataset)
View(dataset)
dataset=read.delim("train.tsv")
View(dataset)
dataset<-dataset %>%
rename(false=rating)
colnames(dataset) <- c("ID", "rating", "comments")
View(dataset)
Corpus=VCorpus(VectorSource(dataset$comments))
Corpus=tm_map(Corpus,content_transformer(tolower))
Corpus=tm_map(Corpus,removeNumbers)
Corpus=tm_map(Corpus,removePunctuation)
Corpus=tm_map(Corpus,removeWords,stopwords())
Corpus=tm_map(Corpus,stemDocument)
Corpus=tm_map(Corpus,stripWhitespace)
Corpus=tm_map(Corpus,stripWhites)
Corpus=VCorpus(VectorSource(dataset$comments))
Corpus=tm_map(Corpus,content_transformer(tolower))
Corpus=tm_map(Corpus,removeNumbers)
Corpus=tm_map(Corpus,removePunctuation)
Corpus=tm_map(Corpus,removeWords,stopwords())
Corpus=tm_map(Corpus,stemDocument)
Corpus=tm_map(Corpus,stripWhitespace)
as.character(Corpus[[1]])
dtm=DocumentTermMatrix(Corpus)
View(dtm)
View(dtm)
dtm
dtm=removeSparseTerms(dtm,0.99)
dtm
dataset<-as.factor(dataset$rating)
dataset
dataset=read.delim("train.tsv")
colnames(dataset) <- c("ID", "rating", "comments")
View(dataset)
dataset<-dataset %>%
as.factor(dataset$rating)
View(dataset)
mutate (rating =as.factor(rating)
dataset<-dataset %>%
dataset<-dataset %>%
mutate (rating =as.factor(rating))
is.na=TRUE
dataset<-dataset %>%
mutate (rating =as.factor(rating))
dataset <- dataset%>% drop_na()
library(dplyr)
dataset <- dataset%>% drop_na()
dataset=read.delim("train.tsv")
colnames(dataset) <- c("ID", "rating", "comments")
View(dataset)
dataset <- na.omit(dataset)
dataset<-dataset %>%
mutate (rating =as.factor(rating))
dataset <- na.omit(dataset$rating)
dataset<-dataset %>%
mutate (rating =as.factor(rating))
d<- dataset %>%
mutate(
across(c(rating), factor)
)
View(dataset)
dataset=read.delim("train.tsv")
colnames(dataset) <- c("ID", "rating", "comments")
dataset <- na.omit(dataset)
d<-dataset
d <- na.omit(dataset)
View(dataset)
data<-dataset
data<-na.omit(data)
data$rating <- as.factor(data$rating)
str(data)
str(data$rating)
Corpus=VCorpus(VectorSource(data$comments))
Corpus=tm_map(Corpus,content_transformer(tolower))
Corpus=tm_map(Corpus,removeNumbers)
Corpus=tm_map(Corpus,removePunctuation)
Corpus=tm_map(Corpus,removeWords,stopwords())
Corpus=tm_map(Corpus,stemDocument)
Corpus=tm_map(Corpus,stripWhitespace)
as.character(Corpus[[1]])
dtm=DocumentTermMatrix(Corpus)
dtm=removeSparseTerms(dtm,0.99)
data1=as.data.frame(as.matrix(dtm))
View(data1)
data
data1$ratings=data$rating
str(data1)
str(data1$ratings)
library(caTools)
set.seed(123)
split=sample.split(data1$ratings,SplitRatio = 0.8)
training_set=subset(data1,split==TRUE)
test_set=subset(data1,split==FALSE)
library(randomForest)
library(randomForest)
classifier=randomForest(x=training_set[-193]
y=training_set$ratings,
classifier=randomForest(x=training_set[-193],
y=training_set$ratings,
ntree=20)
y_pred=predict(classifier,newdata = test_set[-193])
cm=table(table_set[,193],y_pred)
varImpPlot(classifier,main = "variable importance")
